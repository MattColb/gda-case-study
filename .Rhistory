q()
clear()
4+4
8%4
8//4
var <- 8
x <- 1
x+vat
x+var
x<-'Testing'
x
print(x)
2 -> y
x = 4
x == 3
z = x+y
rm(var, x, z)
rm(list = ls())
ls()
getwd()
ls()
setwd("C:/User/mattc/desktop/stat040 r")
setwd("C:/User/mattc/desktop/stat040 r")
## Parse HTML ##
#install.packages("xml2")
library(xml2)
page<-read_html("https://www.metacritic.com/browse/games/score/userscore/all/all/filtered?view=detailed&page=0")
class(page) # Result is class xml_document
page # Print HTML to console
# Data is arranged in <div> tags with class "quote"
games <- xml_text(xml_find_all(page, "//a[@class='title']"))
summary <- xml_text(xml_find_all(page, "//div[@class='summary']"))
platform <- xml_text(xml_find_all(page, "//div[@class='clamp-details']//span[@class='data']"))
release_date <- xml_text(xml_find_all(page, "//div[@class='clamp-details']/span"))
# div that both of these are in is browse-score-clamp
meta_score <- xml_text(xml_find_all(page, "//div[@class='browse-score-clamp']//div[@class='clamp-metascore']"))
user_score <- xml_text(xml_find_all(page, "//div[@class='browse-score-clamp']//div[@class='metascore_w user large game positive']"))
class(games)
length(games)
#Add meta score
games_ratings_df <- data.frame(games, summary, platform, release_date, user_score)
View(games_ratings_df)
meta_score
# Data is arranged in <div> tags with class "quote"
games <- xml_text(xml_find_all(page, "//a[@class='title']"))
summary <- xml_text(xml_find_all(page, "//div[@class='summary']"))
platform <- xml_text(xml_find_all(page, "//div[@class='clamp-details']//span[@class='data']"))
release_date <- xml_text(xml_find_all(page, "//div[@class='clamp-details']/span"))
# div that both of these are in is browse-score-clamp
meta_score <- xml_text(xml_find_all(page, "//div[@class='browse-score-clamp']//div[@a='metascore_anchor']"))
user_score <- xml_text(xml_find_all(page, "//div[@class='browse-score-clamp']//div[@class='metascore_w user large game positive']"))
class(games)
length(games)
#Add meta score
games_ratings_df <- data.frame(games, summary, platform, release_date, user_score)
# div that both of these are in is browse-score-clamp
meta_score <- xml_text(xml_find_all(page, "//div[@class='browse-score-clamp']//a[@class='metascore_anchor']"))
meta_score
# div that both of these are in is browse-score-clamp
meta_score <- xml_text(xml_find_all(page, "//div[@class='browse-score-clamp']//div[@class='clamp-metascore']//a[@class='metascore_anchor']"))
meta_score
# Data is arranged in <div> tags with class "quote"
games <- xml_text(xml_find_all(page, "//a[@class='title']"))
summary <- xml_text(xml_find_all(page, "//div[@class='summary']"))
platform <- xml_text(xml_find_all(page, "//div[@class='clamp-details']//span[@class='data']"))
release_date <- xml_text(xml_find_all(page, "//div[@class='clamp-details']/span"))
# div that both of these are in is browse-score-clamp
meta_score <- xml_text(xml_find_all(page, "//div[@class='browse-score-clamp']//div[@class='clamp-metascore']//a[@class='metascore_anchor']"))
user_score <- xml_text(xml_find_all(page, "//div[@class='browse-score-clamp']//div[@class='metascore_w user large game positive']"))
class(games)
length(games)
#Add meta score
games_ratings_df <- data.frame(games, summary, platform, release_date, meta_score, user_score)
# div that both of these are in is browse-score-clamp
meta_score <- xml_text(xml_find_all(page, "//div[@class='clamp-metascore']//a[@class='metascore_anchor']"))
# Data is arranged in <div> tags with class "quote"
games <- xml_text(xml_find_all(page, "//a[@class='title']"))
summary <- xml_text(xml_find_all(page, "//div[@class='summary']"))
platform <- xml_text(xml_find_all(page, "//div[@class='clamp-details']//span[@class='data']"))
release_date <- xml_text(xml_find_all(page, "//div[@class='clamp-details']/span"))
# div that both of these are in is browse-score-clamp
meta_score <- xml_text(xml_find_all(page, "//div[@class='clamp-metascore']//a[@class='metascore_anchor']"))
user_score <- xml_text(xml_find_all(page, "//div[@class='clamp-userscore']//div[@class='metascore_anchor']"))
class(games)
length(games)
#Add meta score
games_ratings_df <- data.frame(games, summary, platform, release_date, meta_score, user_score)
# Data is arranged in <div> tags with class "quote"
games <- xml_text(xml_find_all(page, "//a[@class='title']"))
summary <- xml_text(xml_find_all(page, "//div[@class='summary']"))
platform <- xml_text(xml_find_all(page, "//div[@class='clamp-details']//span[@class='data']"))
release_date <- xml_text(xml_find_all(page, "//div[@class='clamp-details']/span"))
# div that both of these are in is browse-score-clamp
meta_score <- xml_text(xml_find_all(page, "//div[@class='clamp-metascore']//a[@class='metascore_anchor']"))
user_score <- xml_text(xml_find_all(page, "//div[@class='clamp-userscore']//a[@class='metascore_anchor']"))
class(games)
length(games)
#Add meta score
games_ratings_df <- data.frame(games, summary, platform, release_date, meta_score, user_score)
View(games_ratings_df)
install.packages("Here")
install.packages("here")
install.packages("skimr")
install.packages("janitor")
library(here)
library(skimr)
library(janitor)
library(tidyverse)
setwd("C:/users/mattc/desktop/case_study")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
weight <- read.csv("./Case_Study_Data/weightLogInfo_merged.csv")
weight_by_id <- weight %>% group_by(Id)
test = summarize(weight_by_id, count = n())
test
sleep <- read.csv("./Case_Study_Data/sleepDay_merged.csv")
sleep_by_id <- sleep %>% group_by(Id)
sleep_sum <- summarize(sleep_by_id, sleeps = n(), average_sleep = mean(TotalMinutesAsleep), average_bed = mean(TotalTimeInBed))
sleep_sum$not_sleeping = sleep_sum$average_bed - sleep_sum$average_sleep
sleep_sum$time_under_eight_hours = 480 - sleep_sum$average_sleep
ordered_sleep <- sleep_sum[order(sleep_sum$sleeps, decreasing = FALSE),]
ordered_sleep
mean(sleep_sum$sleeps)
nrow(sleep_sum[sleep_sum$time_under_eight_hours < 0, ])
dailyActivity <- read.csv("./Case_Study_Data/dailyActivity_merged.csv")
activity_by_id <- dailyActivity %>% group_by(Id)
activity_sum <- summarize(activity_by_id, count = n(), rest = mean(SedentaryMinutes), avg_steps = mean(TotalSteps), avg_distance = mean(TotalDistance), avg_calories = mean(Calories), avg_light = mean(LightlyActiveMinutes), avg_fairly = mean(FairlyActiveMinutes), avg_very = mean(VeryActiveMinutes))
activity_sum$active <- 1440 - activity_sum$rest
activity_sum
cor(dailyActivity$TotalSteps, dailyActivity$Calories)
cor(dailyActivity$VeryActiveMinutes, dailyActivity$Calories)
nrow(dailyActivity[dailyActivity$LoggedActivitiesDistance == 0,])
library(ggplot2)
p <- ggplot(ordered_sleep, aes(x=sleeps)) + geom_histogram(binwidth = 3, count=11)
p
new_sleep_sum <- sleep_sum[sleep_sum$average_sleep > 180, ]
p2 <- ggplot(new_sleep_sum, aes(x=average_sleep)) + geom_histogram()
p2
nrow(activity_sum[activity_sum$avg_very < 15,])
library(ggplot2)
p <- ggplot(ordered_sleep, aes(x=sleeps)) + geom_histogram()
p
library(ggplot2)
p <- ggplot(ordered_sleep, aes(x=sleeps)) + geom_histogram(binwidth = 5)
p
new_sleep_sum <- sleep_sum[sleep_sum$average_sleep > 180, ]
p2 <- ggplot(new_sleep_sum, aes(x=average_sleep)) + geom_histogram(binwidth=50)
p2
?labs
library(ggplot2)
p <- ggplot(ordered_sleep, aes(x=sleeps)) + geom_histogram(binwidth = 5) + labs(title="Histogram of how often users used the sleep function")
p
library(ggplot2)
p <- ggplot(ordered_sleep, aes(x=sleeps)) + geom_histogram(binwidth = 5) + labs(title="Histogram of how often users used the sleep function", x="Number of Sleeps Tracked", y="Count of Users")
p
8*60
sleep_sum
new_sleep_sum <- sleep_sum[sleep_sum$average_sleep > 180, ]
p2 <- ggplot(new_sleep_sum, aes(x=average_sleep)) + geom_histogram(binwidth=50) + labs(title="Average Time Slept", subtitle="Tracked in Minutes", caption="480 Minutes = 8 Hours", x="Average Number of Minutes Slept", y="Count of Users")
ggplot(sleep_sum, aes(x=average_sleep, y=sleeps)) + geom_point() + labs(title="Sleepy")
p2
new_sleep_sum <- sleep_sum[sleep_sum$average_sleep > 180, ]
p2 <- ggplot(new_sleep_sum, aes(x=average_sleep)) + geom_histogram(binwidth=50) + labs(title="Average Time Slept", subtitle="Tracked in Minutes", caption="480 Minutes = 8 Hours", x="Average Number of Minutes Slept", y="Count of Users")
ggplot(sleep_sum, aes(x=average_sleep, y=sleeps)) + geom_point(aes(color = ifelse(x < 480, "Red", "Blue"))) + labs(title="Sleepy")
new_sleep_sum <- sleep_sum[sleep_sum$average_sleep > 180, ]
p2 <- ggplot(new_sleep_sum, aes(x=average_sleep)) + geom_histogram(binwidth=50) + labs(title="Average Time Slept", subtitle="Tracked in Minutes", caption="480 Minutes = 8 Hours", x="Average Number of Minutes Slept", y="Count of Users")
ggplot(sleep_sum, aes(x=average_sleep, y=sleeps)) + geom_point(aes(color = ifelse(average_sleep < 480, "Red", "Blue"))) + labs(title="Sleepy")
p2
new_sleep_sum <- sleep_sum[sleep_sum$average_sleep > 180, ]
p2 <- ggplot(new_sleep_sum, aes(x=average_sleep)) + geom_histogram(binwidth=50) + labs(title="Average Time Slept", subtitle="Tracked in Minutes", caption="480 Minutes = 8 Hours", x="Average Number of Minutes Slept", y="Count of Users")
ggplot(sleep_sum, aes(x=average_sleep, y=sleeps)) + geom_point(aes(color = ifelse(average_sleep < 480, "Red", "Blue"))) + scale_color_manual(values = c("Red" = "red", "Blue" = "blue")) + labs(title="Sleepy")
p2
new_sleep_sum <- sleep_sum[sleep_sum$average_sleep > 180, ]
p2 <- ggplot(new_sleep_sum, aes(x=average_sleep)) + geom_histogram(binwidth=50) + labs(title="Average Time Slept", subtitle="Tracked in Minutes", caption="480 Minutes = 8 Hours", x="Average Number of Minutes Slept", y="Count of Users")
ggplot(sleep_sum, aes(x=average_sleep, y=sleeps)) + geom_point(aes(color = ifelse(average_sleep < 480, "Under 8 Hours", "Over 8 Hours"))) + scale_color_manual(values = c("Under 8 Hours" = "red", "Over 8 Hours" = "blue")) + labs(title="Sleepy", color="")
p2
new_sleep_sum <- sleep_sum[sleep_sum$average_sleep > 180, ]
p2 <- ggplot(new_sleep_sum, aes(x=average_sleep)) + geom_histogram(binwidth=50) + labs(title="Average Time Slept", subtitle="Tracked in Minutes", caption="480 Minutes = 8 Hours", x="Average Number of Minutes Slept", y="Count of Users")
ggplot(sleep_sum, aes(x=average_sleep, y=sleeps)) + geom_point(aes(color = ifelse(average_sleep < 480, "Under 8 Hours", "Over 8 Hours"))) + scale_color_manual(values = c("Under 8 Hours" = "red", "Over 8 Hours" = "blue")) + labs(title="Amount of Sleep", x="Average Time Slept in Minutes", y="Amount of Sleeps Tracked", color="")
p2
ggplot(sleep_sum, aes(x=average_sleep, y=average_bed)) + geom_point(aes(color = ifelse(average_sleep < 480, "Under 8 Hours", "Over 8 Hours"))) + scale_color_manual(values = c("Under 8 Hours" = "red", "Over 8 Hours" = "blue")) + labs(title="Amount of Sleep", x="Average Time Slept in Minutes", y="Amount of Sleeps Tracked", color="")
ggplot(sleep_sum, aes(x=average_sleep, y=sleeps)) + geom_point(aes(color = ifelse(average_sleep < 480, "Under 8 Hours", "Over 8 Hours"))) + scale_color_manual(values = c("Under 8 Hours" = "red", "Over 8 Hours" = "blue")) + labs(title="Amount of Sleep", x="Average Time Slept in Minutes", y="Amount of Sleeps Tracked", color="")
ggplot(sleep_sum, aes(x=average_sleep, y=sleeps)) + geom_point(aes(color = ifelse(average_sleep < 480, "Under 8 Hours", "Over 8 Hours"))) + scale_color_manual(values = c("Under 8 Hours" = "red", "Over 8 Hours" = "blue")) + labs(title="Amount of Sleep", x="Average Time Slept in Minutes", y="Amount of Sleeps Tracked", color="")
nrow(sleep_sum[sleep_sum$time_under_eight_hours < 0,])
weight
weight <- read.csv("./Case_Study_Data/weightLogInfo_merged.csv")
weight_by_id <- weight %>% group_by(Id)
sum_weight <- summarize(weight_by_id, count = n())
sum_weight
sum_weight
sum(sum_weight$ocunt)
sum(sum_weight$count)
ggplot(sleep_sum, aes(x=average_sleep, y=sleeps)) + geom_point(aes(color = ifelse(average_sleep < 480, "Under 8 Hours", "Over 8 Hours"))) + scale_color_manual(values = c("Under 8 Hours" = "red", "Over 8 Hours" = "blue")) + labs(title="Amount of Sleep", x="Average Time Slept in Minutes", y="Amount of Sleeps Tracked", color="")
ggplot(activity_sum, aes(x=avg_very, y=avg_calories)) + geom_point() + geom_smooth(method=lm) + labs(title="Average very intense activity vs calores", x="Average minutes of very intense activity", y="Number o fcalories lost")
ggplot(activity_sum, aes(x=active, y=avg_calories)) + geom_point() +geom_smooth(method=lm) + labs()
ggplot(activity_sum, aes(x=avg_very, y=avg_calories)) + geom_point() + geom_smooth(method=lm) + labs(title="Average very intense activity vs calores", x="Average minutes of very intense activity", y="Number of calories lost")
ggplot(activity_sum, aes(x=active, y=avg_calories)) + geom_point() +geom_smooth(method=lm) + labs(title="Average number of active minutes vs calories", x="Average active minutes", y="Average Calories lost")
